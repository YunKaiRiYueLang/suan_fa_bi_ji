/*插入排序的基本情形：现有一个已知序列A，现在假想将它分成两部分，第一个元素 和除了第一个之外的剩余元素
                      前面那部分叫已经有序部分，后面那个叫等排序部分。从等待排序部分，按照顺序一个个取出来，
                      每一个取出来后，插入已经有序部分。有序部分因为插入新的成员，插入位置之后有序成员都要后
                      移一个位置。 这样，有序部分逐渐增多，最终A成为有序序列了。
*/
// 在下面的实现中，序号依然从1开始。 与实际情况不太一样
int A[maxn],n;
void inserSort{
    for(int i=2；i<=n;i++){     // 进行n-1趟排序
        int tem=A[i];int j=i;   // tem临时存放A【i】,j从i开始往前枚举
        while(j>1&&tem<A[j-1]){     
            A[j]=A[j-1];    //A[j-1]值赋值为A[j]实现类似后移的效果
            j--;
        }
        A[j]=temp;//插入位置j
    }
}